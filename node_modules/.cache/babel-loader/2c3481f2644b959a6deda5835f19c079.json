{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Documents\\\\React-Apps\\\\hatchways\\\\hatchways\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport StudentCard from './components/studentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [studentInfo, setStudentInfo] = useState([]);\n  const [studentFilter, setStudentFilter] = useState([]);\n  const [contentFilter, setContentFilter] = useState([]);\n  const [tagFilter, setTagFilter] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchStudents = async url => {\n    // axios({\n    //   method: 'get',\n    //   url: url\n    // }).then((response)=> \n    // setStudentInfo(response.data.students)).then(()=>console.log(studentInfo[0]))\n    const data = await fetch(url).then(response => response.json()) // .then((res)=>\n    // {const myarray= res.map((student)=>[...student.students,{tag:[]}]);\n    // return myarray;\n    // })\n    .then(students => {\n      // let tags ={tags:[]}\n      // let myArray= students.students.map((item)=> {return {...item,...tags}})\n      // console.log(myArray)\n      let newStudentInfo = [];\n      students.students.map(item => {\n        let addTags = item;\n        addTags.tags = [];\n        newStudentInfo.push(addTags);\n      });\n      console.log(newStudentInfo); // return myArray\n\n      setStudentInfo(newStudentInfo);\n      setStudentFilter(newStudentInfo);\n      setTagFilter(newStudentInfo);\n      setContentFilter(newStudentInfo);\n    }).then(students => {\n      //  fetchContent('i');\n      // setStudentInfo(students.students); \n      // setStudentFilter(students.students);\n      setLoading(true);\n      console.log(loading);\n      console.log(studentInfo);\n    }).then(() => {\n      console.log(studentFilter);\n    }); // .then(()=>console.log(studentInfo))\n  };\n\n  const fetchName = str => {\n    const nameArray = [];\n    studentInfo.map(student => {\n      const fullName = `${student.firstName} ${student.lastName}`.toLowerCase();\n\n      if (fullName.includes(str)) {\n        nameArray.push(student);\n      }\n\n      ; // return student.firstName.toLowerCase().includes(str)||student.lastName.toLowerCase().includes(str)\n    }); // console.log(result);\n\n    let filterContent = [];\n    tagFilter.map(student => {\n      const fullName = `${student.firstName} ${student.lastName}`.toLowerCase();\n\n      if (fullName.includes(str)) {\n        filterContent.push(student);\n      }\n    });\n    setStudentFilter(nameArray);\n    setContentFilter(filterContent);\n    console.log(studentFilter);\n  };\n\n  const fetchTag = str => {\n    if (str) {\n      const tagArray = [];\n      const contentArray = [];\n      contentFilter.map(student => {\n        // const fullName= `${student.firstName} ${student.lastName}`.toLowerCase();\n        let tagged = false;\n        student.tags.map(tag => {\n          if (tag.includes(str)) {\n            tagged = true;\n          }\n        });\n\n        if (tagged) {\n          tagArray.push(student);\n        }\n      });\n      studentFilter.map(student => {\n        let tagged = false;\n        student.tags.map(tag => {\n          if (tag.includes(str)) {\n            tagged = true;\n          }\n        });\n\n        if (tagged) {\n          contentArray.push(student);\n        }\n      });\n      setContentFilter(contentArray);\n      setTagFilter(tagArray);\n    } else {\n      // setStudentFilter(studentFilter);\n      setTagFilter(studentInfo);\n      setContentFilter(studentFilter);\n    }\n\n    console.log(tagFilter);\n  };\n\n  const changeFilter = e => {\n    fetchName(e.target.value);\n  };\n\n  const changeTag = e => {\n    fetchTag(e.target.value);\n  };\n\n  const average = arr => {\n    return arr.reduce((a, b) => Number(a) + Number(b), 0) / arr.length;\n  };\n\n  const addTag = (str, index) => {\n    let tagInfo = [...studentInfo];\n    const jeeze = tagInfo[index];\n    console.log(jeeze);\n    jeeze.tags.push(str);\n    setStudentInfo(tagInfo);\n    console.log(studentInfo);\n  };\n\n  useEffect(() => {\n    fetchStudents('https://api.hatchways.io/assessment/students');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\" \", loading ? /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 google-fonts text-secondary\",\n          children: \"HATCHWAYS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 student-logo text-secondary\",\n          children: [\"STUDENT\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 67\n          }, this), \"PROFILES\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control form-control-border mb-2 mt-2\",\n          name: \"searchStudent\",\n          id: \"searchStudent\",\n          type: \"text\",\n          onChange: changeFilter,\n          placeholder: \"Search Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control form-control-border mb-2 mt-2\",\n          name: \"searchTag\",\n          id: \"searchTag\",\n          type: \"text\",\n          onChange: changeTag,\n          placeholder: \"Search Tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), contentFilter ? contentFilter.map((student, index) => /*#__PURE__*/_jsxDEV(StudentCard, {\n        index: index,\n        pic: student.pic,\n        firstName: student.firstName,\n        lastName: student.lastName,\n        email: student.email,\n        company: student.company,\n        skill: student.skill,\n        grades: student.grades,\n        tags: student.tags,\n        average: average,\n        addTag: addTag\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 62\n      }, this)) // <div className=\"row service-box-wrap\" key={index}>\n      //   <div className=\"col-sm-3 col-md-3 col-lg-3 col-xl-3 d-flex\" ><img className=\"rounded-circle border border-secondary mx-auto\" src={student.pic}/></div>\n      //   <div className=\"col-sm-9 col-md-9 col-lg-9 col-xl-9 \">\n      //     <div className=\"h3\"><p>{student.firstName} {student.lastName}</p></div>\n      //     <div>Email: {student.email}</div>\n      //     <div>Company: {student.company}</div>\n      //     <div>Skill: {student.skill}</div> \n      //     <div>Average: {average(student.grades).toFixed(2)}%</div>                  \n      //     </div> </div>)\n      : 'Loading', studentInfo[0].city, \"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"src/App.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 16\n      }, this), \" and save to reload.\", /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 6\n  }, this);\n}\n\n_s(App, \"X4ohnN7BWxYPisTWCcdffMxO/PY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/peter/OneDrive/Documents/React-Apps/hatchways/hatchways/src/App.js"],"names":["logo","React","useState","useEffect","axios","Spinner","Container","Row","Col","StudentCard","App","studentInfo","setStudentInfo","studentFilter","setStudentFilter","contentFilter","setContentFilter","tagFilter","setTagFilter","loading","setLoading","fetchStudents","url","data","fetch","then","response","json","students","newStudentInfo","map","item","addTags","tags","push","console","log","fetchName","str","nameArray","student","fullName","firstName","lastName","toLowerCase","includes","filterContent","fetchTag","tagArray","contentArray","tagged","tag","changeFilter","e","target","value","changeTag","average","arr","reduce","a","b","Number","length","addTag","index","tagInfo","jeeze","pic","email","company","skill","grades","city"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport StudentCard from './components/studentCard';\n\nfunction App() {\n\n  const [studentInfo, setStudentInfo] = useState([]);\n  const [studentFilter, setStudentFilter]  = useState([]);\n  const [contentFilter, setContentFilter] = useState([]);\n  const [tagFilter, setTagFilter] = useState([]);\n  const [loading, setLoading] = useState(false)\n\nconst fetchStudents= async (url)=>{\n  // axios({\n  //   method: 'get',\n  //   url: url\n   \n\n  // }).then((response)=> \n  // setStudentInfo(response.data.students)).then(()=>console.log(studentInfo[0]))\n\n\n\nconst data= await fetch(url).then((response)=> response.json())\n// .then((res)=>\n// {const myarray= res.map((student)=>[...student.students,{tag:[]}]);\n// return myarray;\n// })\n.then((students)=>{\n  // let tags ={tags:[]}\n  // let myArray= students.students.map((item)=> {return {...item,...tags}})\n  // console.log(myArray)\n  let newStudentInfo= []\n  students.students.map((item)=> {\n  let addTags= item;\n  addTags.tags=[];\n    newStudentInfo.push(addTags)\n  })\n\n  console.log(newStudentInfo)\n  // return myArray\n  setStudentInfo(newStudentInfo); \n  setStudentFilter(newStudentInfo);\n  setTagFilter(newStudentInfo);\n  setContentFilter(newStudentInfo)\n})\n  .then((students)=>{\n  \n//  fetchContent('i');\n  // setStudentInfo(students.students); \n  // setStudentFilter(students.students);\n  \nsetLoading(true);\n\nconsole.log(loading);\nconsole.log(studentInfo);\n}).then(()=>{ console.log(studentFilter)})\n\n\n\n// .then(()=>console.log(studentInfo))\n\n}\n\nconst fetchName =  (str)=> {\n\n  const nameArray= []\n studentInfo.map((student)=>{\n\n\n    const fullName= `${student.firstName} ${student.lastName}`.toLowerCase();\n    if(fullName.includes(str)){nameArray.push(student)};\n  // return student.firstName.toLowerCase().includes(str)||student.lastName.toLowerCase().includes(str)\n\n\n  })\n\n\n\n\n// console.log(result);\n\n let filterContent= [];\n tagFilter.map(student =>{\n  const fullName = `${student.firstName} ${student.lastName}`.toLowerCase();\n  if(fullName.includes(str)){filterContent.push(student)}\n })\n setStudentFilter(nameArray);\n setContentFilter(filterContent)\n\n console.log(studentFilter);\n}\n\n\nconst fetchTag =(str)=>{\nif(str){\nconst tagArray= [];\nconst contentArray= [];\n contentFilter.map((student)=>{\n  // const fullName= `${student.firstName} ${student.lastName}`.toLowerCase();\nlet tagged= false;\n\nstudent.tags.map((tag)=> {\nif(tag.includes(str)){\n\n  tagged=true;\n}\n\n})\n\nif(tagged) {\n\n  tagArray.push(student);\n}\n\n});\n\nstudentFilter.map((student)=>{\nlet tagged= false;\nstudent.tags.map((tag)=>{\nif(tag.includes(str)){\ntagged=true\n\n}\n\n}); \nif(tagged) {\n\n  contentArray.push(student)\n}\n\n})\n\nsetContentFilter(contentArray);\nsetTagFilter(tagArray);\n\n}else{\n  // setStudentFilter(studentFilter);\n  setTagFilter(studentInfo);\n  setContentFilter(studentFilter)\n\n}\n\n\n console.log(tagFilter);\n\n\n\n\n}\n\n\nconst changeFilter =(e)=>{\n\n  fetchName(e.target.value)\n\n}\n\nconst changeTag =(e)=>{\n\n  fetchTag(e.target.value)\n}\n\n\n\nconst average= (arr)=>{\n     \n  return arr.reduce((a,b)=> Number(a)+Number(b), 0)/arr.length\n}\n\nconst addTag= (str, index)=>{\nlet tagInfo= [...studentInfo];\n\nconst jeeze= tagInfo[index];\nconsole.log(jeeze);\njeeze.tags.push(str);\nsetStudentInfo(tagInfo);\nconsole.log(studentInfo)\n}\n\nuseEffect(()=>{\n\n  fetchStudents('https://api.hatchways.io/assessment/students');\n  \n\n},[]);\n\n\n  return (\n     <div className=\"App\"> {loading? \n      <Container>\n    \n        \n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"row align-center\"><div className='col-6 google-fonts text-secondary'>HATCHWAYS</div>\n        <div className='col-6 student-logo text-secondary'>STUDENT<br/>PROFILES</div>\n        </div>\n        {/* <p> */}\n        <div className=\"form-group row\"><input className=\"form-control form-control-border mb-2 mt-2\" name=\"searchStudent\" id=\"searchStudent\" type=\"text\"  onChange={changeFilter} placeholder=\"Search Name\"/></div>\n        <div className=\"form-group row\"><input className=\"form-control form-control-border mb-2 mt-2\" name=\"searchTag\" id=\"searchTag\" type=\"text\" onChange={changeTag}  placeholder=\"Search Tag\"/></div>\n\n          {contentFilter? contentFilter.map((student,index)=><StudentCard\n          key={index}\n          index={index}\n          pic={student.pic}\n          firstName= {student.firstName}\n          lastName= {student.lastName}\n          email= {student.email}\n          company= {student.company}\n          skill= {student.skill}\n          grades={student.grades}\n          tags={student.tags}\n          average= {average}\n          addTag= {addTag}/>)\n          // <div className=\"row service-box-wrap\" key={index}>\n          //   <div className=\"col-sm-3 col-md-3 col-lg-3 col-xl-3 d-flex\" ><img className=\"rounded-circle border border-secondary mx-auto\" src={student.pic}/></div>\n          //   <div className=\"col-sm-9 col-md-9 col-lg-9 col-xl-9 \">\n          //     <div className=\"h3\"><p>{student.firstName} {student.lastName}</p></div>\n          //     <div>Email: {student.email}</div>\n          //     <div>Company: {student.company}</div>\n          //     <div>Skill: {student.skill}</div> \n          //     <div>Average: {average(student.grades).toFixed(2)}%</div>                  \n          //     </div> </div>)\n              :'Loading'}\n          \n          {studentInfo[0].city}\n          Edit <code>src/App.js</code> and save to reload.\n        {/* </p> */}\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </Container>: <Spinner animation=\"border\" variant=\"info\" />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}