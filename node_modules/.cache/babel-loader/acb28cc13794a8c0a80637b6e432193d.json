{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Documents\\\\React-Apps\\\\hatchways\\\\hatchways\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport StudentCard from './components/studentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [studentInfo, setStudentInfo] = useState([]);\n  const [studentFilter, setStudentFilter] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchStudents = async url => {\n    // axios({\n    //   method: 'get',\n    //   url: url\n    // }).then((response)=> \n    // setStudentInfo(response.data.students)).then(()=>console.log(studentInfo[0]))\n    const data = await fetch(url).then(response => response.json()) // .then((res)=>\n    // {const myarray= res.map((student)=>[...student.students,{tag:[]}]);\n    // return myarray;\n    // })\n    .then(students => {\n      let tags = {\n        tags: []\n      };\n      let myArray = students.students.map(item => {\n        return { ...item,\n          ...tags\n        };\n      });\n      console.log(myArray); // return myArray\n\n      setStudentInfo(myArray);\n      setStudentFilter(myArray);\n    }).then(students => {\n      //  fetchContent('i');\n      // setStudentInfo(students.students); \n      // setStudentFilter(students.students);\n      setLoading(true);\n      console.log(loading);\n      console.log(studentInfo);\n    }).then(() => {\n      console.log(studentFilter);\n    }); // .then(()=>console.log(studentInfo))\n  };\n\n  const fetchContent = str => {\n    // const array= []\n    const result = studentInfo.filter(student => {\n      // const fullName= `${student.firstName} ${student.lastName}`.toLowerCase();\n      return student.firstName.toLowerCase().includes(str) || student.lastName.toLowerCase().includes(str);\n    });\n    console.log(result);\n    setStudentFilter(result);\n    console.log(studentFilter);\n  };\n\n  const changeFilter = e => {\n    fetchContent(e.target.value);\n  };\n\n  const average = arr => {\n    return arr.reduce((a, b) => Number(a) + Number(b), 0) / arr.length;\n  };\n\n  useEffect(() => {\n    fetchStudents('https://api.hatchways.io/assessment/students');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\" \", loading ? /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control form-control-border mb-2 mt-2\",\n          name: \"searchStudent\",\n          id: \"searchStudent\",\n          type: \"text\",\n          onChange: changeFilter,\n          placeholder: \"Search Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), studentFilter ? studentFilter.map((student, index) => /*#__PURE__*/_jsxDEV(StudentCard, {\n        index: index,\n        pic: student.pic,\n        firstName: student.firstName,\n        lastName: student.lastName,\n        email: student.email,\n        company: student.company,\n        skill: student.skill,\n        grades: student.grades,\n        tags: student.tags,\n        average: average\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 62\n      }, this)) // <div className=\"row service-box-wrap\" key={index}>\n      //   <div className=\"col-sm-3 col-md-3 col-lg-3 col-xl-3 d-flex\" ><img className=\"rounded-circle border border-secondary mx-auto\" src={student.pic}/></div>\n      //   <div className=\"col-sm-9 col-md-9 col-lg-9 col-xl-9 \">\n      //     <div className=\"h3\"><p>{student.firstName} {student.lastName}</p></div>\n      //     <div>Email: {student.email}</div>\n      //     <div>Company: {student.company}</div>\n      //     <div>Skill: {student.skill}</div> \n      //     <div>Average: {average(student.grades).toFixed(2)}%</div>                  \n      //     </div> </div>)\n      : 'Loading', studentInfo[0].city, \"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"src/App.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 16\n      }, this), \" and save to reload.\", /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 6\n  }, this);\n}\n\n_s(App, \"5B3yg8XNBS15tl2STo7g6mFZdbo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/peter/OneDrive/Documents/React-Apps/hatchways/hatchways/src/App.js"],"names":["logo","React","useState","useEffect","axios","Spinner","Container","Row","Col","StudentCard","App","studentInfo","setStudentInfo","studentFilter","setStudentFilter","loading","setLoading","fetchStudents","url","data","fetch","then","response","json","students","tags","myArray","map","item","console","log","fetchContent","str","result","filter","student","firstName","toLowerCase","includes","lastName","changeFilter","e","target","value","average","arr","reduce","a","b","Number","length","index","pic","email","company","skill","grades","city"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport './App.css';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport StudentCard from './components/studentCard';\n\nfunction App() {\n\n  const [studentInfo, setStudentInfo] = useState([]);\n  const [studentFilter, setStudentFilter]  = useState([]);\n  const [loading, setLoading] = useState(false)\n\nconst fetchStudents= async (url)=>{\n  // axios({\n  //   method: 'get',\n  //   url: url\n   \n\n  // }).then((response)=> \n  // setStudentInfo(response.data.students)).then(()=>console.log(studentInfo[0]))\n\n\n\nconst data= await fetch(url).then((response)=> response.json())\n// .then((res)=>\n// {const myarray= res.map((student)=>[...student.students,{tag:[]}]);\n// return myarray;\n// })\n.then((students)=>{\n  let tags ={tags:[]}\n  let myArray= students.students.map((item)=> {return {...item,...tags}})\n  console.log(myArray)\n\n  // return myArray\n  setStudentInfo(myArray); \n  setStudentFilter(myArray);\n})\n  .then((students)=>{\n  \n//  fetchContent('i');\n  // setStudentInfo(students.students); \n  // setStudentFilter(students.students);\n  \nsetLoading(true);\n\nconsole.log(loading);\nconsole.log(studentInfo);\n}).then(()=>{ console.log(studentFilter)})\n\n\n\n// .then(()=>console.log(studentInfo))\n\n}\n\nconst fetchContent =  (str)=> {\n\n  // const array= []\n  const result = studentInfo.filter((student)=>{\n    // const fullName= `${student.firstName} ${student.lastName}`.toLowerCase();\n  return student.firstName.toLowerCase().includes(str)||student.lastName.toLowerCase().includes(str)\n\n\n  })\n\n\n\n\nconsole.log(result);\n\n \n setStudentFilter(result);\n\n console.log(studentFilter);\n}\n\n\nconst changeFilter =(e)=>{\n\n  fetchContent(e.target.value)\n\n}\n\nconst average= (arr)=>{\n     \n  return arr.reduce((a,b)=> Number(a)+Number(b), 0)/arr.length\n}\n\nuseEffect(()=>{\n\n  fetchStudents('https://api.hatchways.io/assessment/students');\n  \n\n},[]);\n\n\n  return (\n     <div className=\"App\"> {loading? \n      <Container>\n    \n        \n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        {/* <p> */}\n        <div className=\"form-group row\"><input className=\"form-control form-control-border mb-2 mt-2\" name=\"searchStudent\" id=\"searchStudent\" type=\"text\"  onChange={changeFilter} placeholder=\"Search Name\"/></div>\n        \n          {studentFilter? studentFilter.map((student,index)=><StudentCard\n          key={index}\n          index={index}\n          pic={student.pic}\n          firstName= {student.firstName}\n          lastName= {student.lastName}\n          email= {student.email}\n          company= {student.company}\n          skill= {student.skill}\n          grades={student.grades}\n          tags={student.tags}\n          average= {average}/>)\n          // <div className=\"row service-box-wrap\" key={index}>\n          //   <div className=\"col-sm-3 col-md-3 col-lg-3 col-xl-3 d-flex\" ><img className=\"rounded-circle border border-secondary mx-auto\" src={student.pic}/></div>\n          //   <div className=\"col-sm-9 col-md-9 col-lg-9 col-xl-9 \">\n          //     <div className=\"h3\"><p>{student.firstName} {student.lastName}</p></div>\n          //     <div>Email: {student.email}</div>\n          //     <div>Company: {student.company}</div>\n          //     <div>Skill: {student.skill}</div> \n          //     <div>Average: {average(student.grades).toFixed(2)}%</div>                  \n          //     </div> </div>)\n              :'Loading'}\n          \n          {studentInfo[0].city}\n          Edit <code>src/App.js</code> and save to reload.\n        {/* </p> */}\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </Container>: <Spinner animation=\"border\" variant=\"info\" />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}